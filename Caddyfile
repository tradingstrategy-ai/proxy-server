#
# Caddy configuration for Trading Strategy website/backend APIs.
#
# Contains both production and staging environments.
#
#
{
    # Disable the Caddy admin API
    # This is personal preference, you can remove this if desired
    admin off
    email no-reply@tradingstrategy.ai

    log {
        output file /var/log/caddy/access.log
    }
}

#
# Production frontend and backend and docs
#
# PYramid backend API server is localhost:3456
# SvelteKit Node.js frontend SSR server is localhost:3000
#
http://tradingstrategy.ai {

    # Backend API request
    handle /api* {
        # This is the upstream Waitress server
        reverse_proxy 127.0.0.1:3456 {
            # Backend API must respond to an individual API call under 20 seconds
            transport http {
                response_header_timeout 20s
            }
        }
    }

    # Serve docs produced by client repo Github Actions
    # from Netlify server
    handle /docs* {
        reverse_proxy https://boring-poitras-17190b.netlify.app {
            header_up Host boring-poitras-17190b.netlify.app
        }
    }

    # SvelteKit production server from frontend repository
    handle {
        reverse_proxy 127.0.0.1:3000 {
        header_up X-Forwarded-Host {host}
            # Frontend must render the page under 20 seconds
            transport http {
                response_header_timeout 20s
            }
        }
    }
    # https://github.com/devangels/caddy-ipfilter
    # https://www.cloudflare.com/ips/
    #ipfilter / {
    # 	rule allow
	#    blockpage blocked.html
	#    ip 173.245.48.0/20 103.21.244.0/22 103.22.200.0/22 103.31.4.0/22 141.101.64.0/18 108.162.192.0/18 190.93.240.0/20 188.114.96.0/20 197.234.240.0/22 198.41.128.0/17 162.158.0.0/15 104.16.0.0/13 104.24.0.0/14 172.64.0.0/13 131.0.72.0/22 2400:cb00::/32 2606:4700::/32 2803:f800::/32 2405:b500::/32 2405:8100::/32 2a06:98c0::/29 2c0f:f248::/32
    #}

}


#
# Staging server.
#
# Pushed from a specific branch.
#
# Backend - Python Waitress: 127.0.0.1:4567
# Frontend - SvelteKit node.js adapter: 4000
# Run in tmux on the server
#
# Protected by HTTP Basic Auth, so that the website is not picked up by robots.
# The password is not super secret.
#
http://pinky.tradingstrategy.ai {

    # Staging Backend API requests
    # Handled by Matilda (see below)
    handle /api* {
        reverse_proxy 127.0.0.1:4567 {
            header_up X-Real-IP {remote_host}
        }
    }

    # Docs not available staging
    #handle /docs* {
    #    reverse_proxy https://boring-poitras-17190b.netlify.app {
    #        header_up Host boring-poitras-17190b.netlify.app
    #    }
    #}

    # SvelteKit production server from frontend repository
    handle {

        # Protect with password to prevent the server ending up in the Google index.
        # The password is angrybird, generated with cadddy hash-password.
        # This is mostly protecting against indexing.
        # https://caddyserver.com/docs/caddyfile/directives/basicauth
        basicauth {
	        pinky JDJhJDE0JFFpeTFyWHdKSkhwQzBsQkk3TGhkNnVEQW1WcnkzclhzTlJlaWVQMnpLVkxyNVh5Q1pIanIu
        }
        reverse_proxy 127.0.0.1:4000 {
            header_up X-Real-IP {remote_host}
        }
    }
}


# Server for oracle data
http://candlelightdinner.tradingstrategy.ai {

    reverse_proxy 127.0.0.1:6543 {
        header_up X-Real-IP {remote_host}
    }
}

# Server for web backend
# https://docs.pylonsproject.org/projects/waitress/en/latest/reverse-proxy.html
http://matilda.tradingstrategy.ai {

    reverse_proxy 127.0.0.1:3456 {
        header_up X-Real-IP {remote_host}
        # header_upstream X-Forwarded-Proto https
    }
}


# Integration test bacjebd server
http://steve.tradingstrategy.ai {
    reverse_proxy 127.0.0.1:3457 {
        header_up X-Real-IP {remote_host}
    }
}

#
# Metrics
#
# Expose Caddy OpenMetrics end-point at localhost port 6000
#
http://127.0.0.1:6000 {
    metrics /metrics
}
